#!/usr/bin/env python3
# apt-get install python3-httpx

import argparse
import datetime
import logging
import xml.etree.ElementTree as ET

import httpx

logging.basicConfig(
    format="[%(asctime)s][%(name)s][%(levelname)s] %(message)s", level=logging.WARNING
)
logger = logging.getLogger(__name__)


def get_exchange_rate(currency="USD"):
    url = f"https://rsshub.app/boc/whpj/xhmc?filter_title={currency}"
    # 使用默认 user-agent 似乎会撞 RSSHub 的 Cloudflare Challenge
    headers = {"user-agent": "curl/7.88.1"}
    response = httpx.get(url, headers=headers)
    logger.debug(response)
    root = ET.fromstring(response.text)
    for title in root.findall(".//title"):
        if currency in title.text:
            return float(title.text.split("现汇卖出价：")[-1])
    return None


def create_spotify_fee_message(
    monthly_fee=19.99, currency="USD", user_count=6, months=3, billing_day=17
):
    today = datetime.date.today()
    start_date = today + datetime.timedelta(days=(billing_day - today.day))
    end_date = start_date + datetime.timedelta(days=months * 30)
    exchange_rate = get_exchange_rate(currency)
    logger.debug("exchange_rate for currency %s is %.2f", currency, exchange_rate)
    user_fee = round(monthly_fee * months * exchange_rate / 100 / user_count, 2)

    message = f"""
大家好,

大家可以开始缴纳本期 Spotify Family 订阅摊分费用了,

本期缴费的生效时间为 {start_date} ~ {end_date}, 当前 Spotify 订阅费用为 `\${monthly_fee}/mo\`,

按照当前 [中国银行外汇牌价](https://www.boc.cn/sourcedb/whpj/) 美元 的 *现汇卖出价* \`${exchange_rate} CNY / 100 USD\`, 本期应收:

\`${monthly_fee} * {months} * {exchange_rate} / 100 / {user_count} = {user_fee} CNY\`
"""
    return message


def send_telegram_message(message, bot_token, chat_id):
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {"chat_id": chat_id, "text": message, "parse_mode": "Markdown"}
    response = httpx.post(url=url, json=data)
    logger.debug(response)


def parse_args():
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "-b",
        "--bot_token",
        help="telegram bot_token",
    )
    parser.add_argument(
        "-c",
        "--chat_id",
        help="telegram chat_id",
    )

    return parser.parse_args()


def main():
    args = parse_args()

    message = create_spotify_fee_message()
    if args.bot_token and args.chat_id:
        send_telegram_message(message, args.bot_token, args.chat_id)
    else:
        print(message)


if __name__ == "__main__":
    main()
